import { useEffect, useState } from 'react'
import dynamic from 'next/dynamic'
import useStore from '../helpers/store'
import Image from 'next/image';


const ReactNipple = dynamic(() => import('react-nipple'), { ssr: false });

// const emojiActions = ["Idle", "GestureWaving", "GestureClapping", "GestureCheering", "GestureDanceTwist", "GestureGreeting", "GesturePointing"]
const emojiActions = ["06 clap", "07 hello", "08 waving", "09dance01", "10danace02", "11 seÃ±alando dedo", "11 victory"]

const EmojiItem = (props) => {

  const emojiAnimation = useStore((s) => s.emojiAnimation)

  return (
    <div
      className='relative w-7 hover:w-11 h-14 mx-auto cursor-pointer bg-contain bg-right bg-no-repeat'
      style={{
        backgroundImage: `url(${props.url})`,
        transition: 'all 0.15s ease-in-out 0s',
      }}
      onClick={() => {
        if (emojiAnimation !== "01 idle") return
        useStore.setState({ emojiAnimation: emojiActions[props.emojiIndex] })
        setTimeout(() => {
          useStore.setState({ emojiAnimation: "01 idle" })
        }, props.emojiIndex === 4 ? 9000 : 4000)
      }}
    >
    </div>
  )
}

const VirtualWorldUI = (props) => {
  let playerPosition = useStore((s) => s.playerPosition)
  let test1 = useStore((s) => s.testPoster);
  let testRotacion = useStore((s) => s.testRotacion);
  let shooping = useStore((s) => s.shooping)
  const popupCart = useStore((s) => s.popupCart)
  const [test3, setTest3] = useState(test1);

  const moveControl = (data) => {

    const angle = Math.floor(data.angle.degree)
    const distance = Math.floor(data.distance * 0.7)

    console.log('VirtualWorldUI position = ', playerPosition)
    useStore.setState({ goto: '' });
    useStore.setState({ playerCameraRotation: [-9.2, 0, 21] })
    useStore.setState({ joystickAngle: angle, joystickDistance: distance })
  }

  const endContol = () => {
    useStore.setState({ joystickAngle: 90, joystickDistance: 0 })
  }

  const test = (index, item) => {
    console.log('aaaaaa')

    const updatedNumbers = [...test3];
    updatedNumbers[index] = test1[index] + item;
    console.log(test3, 'test3')
    console.log(test1, 'test1')

    setTest3(updatedNumbers);

    useStore.setState({ testPoster: test3 })
  }



  const test2 = (index, item) => {
    console.log('aaaaaa')

    const updatedNumbers = [...test3];
    updatedNumbers[index] = test1[index] - item;
    console.log(test3, 'test3')
    console.log(test1, 'test1')

    setTest3(updatedNumbers);

    useStore.setState({ testPoster: test3 })
  }

  const test5 = (item) => {
    console.log(testRotacion, 'testRotacion')
    let prueba = testRotacion + item
    useStore.setState({ testRotacion: prueba })

  }

  const test6 = (item) => {
    console.log(testRotacion, 'testRotacion')
    let prueba = testRotacion - item
    useStore.setState({ testRotacion: prueba })

  }


  const [show, setShow] = useState(false)

  const closeUI = (value) => {
    // console.log(value)
    setShow(value)
  }

  return (
    <>
      <div className='absolute bottom-4 right-8 left-8 flex justify-end md:justify-between items-center' style={{ opacity: props.opacity }}>
        <div className='hidden md:block'>
          <div className=' flex justify-start'>
            <Image className="uilogo pt-8 pr-1 mr-4" src={'/assets/img/Logo.png'} width={60} height={50} alt={'logo'} />
            <svg width="130" height="87" viewBox="0 0 130 87" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect x="46.2598" y="0.5" width="37.48" height="38.52" rx="7.5" stroke="black" />
              <rect x="46.2598" y="47.2998" width="37.48" height="38.52" rx="7.5" stroke="black" />
              <rect x="0.5" y="47.2998" width="36.44" height="38.52" rx="7.5" stroke="black" />
              <rect x="93.0601" y="47.2998" width="36.44" height="38.52" rx="7.5" stroke="black" />
              <path d="M59.6492 21.52H60.6792L62.1292 27.23H62.1892L64.0092 21.52H64.9392L66.7592 27.23H66.8192L68.2792 21.52H69.3092L67.4592 28.52H66.1392L64.5092 23.35H64.4492L62.8092 28.52H61.4892L59.6492 21.52Z" fill="black" />
              <path d="M64.547 75.3998C64.0003 75.3998 63.5303 75.2898 63.137 75.0698C62.7503 74.8432 62.457 74.5532 62.257 74.1998C62.0637 73.8465 61.967 73.4765 61.967 73.0898V73.0398H63.107V73.0898C63.107 73.3032 63.157 73.5165 63.257 73.7298C63.357 73.9365 63.517 74.1132 63.737 74.2598C63.957 74.3998 64.2337 74.4698 64.567 74.4698C64.9737 74.4698 65.3037 74.3665 65.557 74.1598C65.817 73.9532 65.947 73.6732 65.947 73.3198C65.947 73.0265 65.847 72.7932 65.647 72.6198C65.4537 72.4465 65.207 72.3298 64.907 72.2698L63.947 72.0798C63.527 71.9932 63.1203 71.8165 62.727 71.5498C62.3403 71.2765 62.147 70.8232 62.147 70.1898C62.147 69.7832 62.2437 69.4265 62.437 69.1198C62.637 68.8132 62.9137 68.5798 63.267 68.4198C63.6203 68.2532 64.0237 68.1698 64.477 68.1698C64.997 68.1698 65.4437 68.2732 65.817 68.4798C66.1903 68.6865 66.4703 68.9565 66.657 69.2898C66.8503 69.6165 66.947 69.9598 66.947 70.3198V70.3598H65.807V70.3298C65.807 70.1498 65.7637 69.9632 65.677 69.7698C65.5903 69.5765 65.4437 69.4132 65.237 69.2798C65.037 69.1398 64.7737 69.0698 64.447 69.0698C64.0603 69.0698 63.7537 69.1765 63.527 69.3898C63.307 69.5965 63.197 69.8565 63.197 70.1698C63.197 70.4432 63.2903 70.6665 63.477 70.8398C63.6703 71.0132 63.9203 71.1298 64.227 71.1898L65.117 71.3698C65.6303 71.4765 66.077 71.6732 66.457 71.9598C66.8437 72.2465 67.037 72.6898 67.037 73.2898C67.037 73.7032 66.9303 74.0698 66.717 74.3898C66.5103 74.7098 66.217 74.9598 65.837 75.1398C65.4637 75.3132 65.0337 75.3998 64.547 75.3998Z" fill="black" />
              <path d="M108.552 68.3198H111.162C111.789 68.3198 112.336 68.4598 112.802 68.7398C113.276 69.0198 113.642 69.4232 113.902 69.9498C114.162 70.4765 114.292 71.0965 114.292 71.8098C114.292 72.5298 114.162 73.1565 113.902 73.6898C113.642 74.2165 113.276 74.6198 112.802 74.8998C112.329 75.1798 111.779 75.3198 111.152 75.3198H108.552V68.3198ZM110.992 74.3698C111.659 74.3698 112.192 74.1565 112.592 73.7298C112.992 73.3032 113.192 72.6632 113.192 71.8098C113.192 70.9565 112.992 70.3165 112.592 69.8898C112.199 69.4632 111.666 69.2498 110.992 69.2498H109.562V74.3698H110.992Z" fill="black" />
              <path d="M19.0414 73.3898H16.3314L15.6614 75.3198H14.6114L17.2014 68.3198H18.1814L20.7814 75.3198H19.7314L19.0414 73.3898ZM18.7514 72.5698L17.7014 69.6298H17.6514L16.6214 72.5698H18.7514Z" fill="black" />
              <path d="M64.8335 6.92651C64.6383 6.73124 64.3217 6.73124 64.1264 6.92651L60.9444 10.1085C60.7492 10.3037 60.7492 10.6203 60.9444 10.8156C61.1397 11.0109 61.4563 11.0109 61.6516 10.8156L64.48 7.98716L67.3084 10.8156C67.5037 11.0109 67.8203 11.0109 68.0155 10.8156C68.2108 10.6203 68.2108 10.3037 68.0155 10.1085L64.8335 6.92651ZM64.98 14.5601L64.98 7.28006L63.98 7.28006L63.98 14.5601L64.98 14.5601Z" fill="black" />
              <path d="M64.1264 61.7136C64.3217 61.9089 64.6383 61.9089 64.8335 61.7136L68.0155 58.5317C68.2108 58.3364 68.2108 58.0198 68.0155 57.8245C67.8203 57.6293 67.5037 57.6293 67.3084 57.8245L64.48 60.653L61.6516 57.8245C61.4563 57.6293 61.1397 57.6293 60.9444 57.8245C60.7492 58.0198 60.7492 58.3364 60.9444 58.5317L64.1264 61.7136ZM63.98 54.0801L63.98 61.3601L64.98 61.3601L64.98 54.0801L63.98 54.0801Z" fill="black" />
              <path d="M13.6863 57.3667C13.491 57.5619 13.491 57.8785 13.6863 58.0738L16.8683 61.2557C17.0635 61.451 17.3801 61.451 17.5754 61.2557C17.7706 61.0605 17.7706 60.7439 17.5754 60.5486L14.7469 57.7202L17.5754 54.8918C17.7706 54.6965 17.7706 54.3799 17.5754 54.1847C17.3801 53.9894 17.0635 53.9894 16.8683 54.1847L13.6863 57.3667ZM21.3198 57.2202L14.0398 57.2202L14.0398 58.2202L21.3198 58.2202L21.3198 57.2202Z" fill="black" />
              <path d="M115.794 57.8867C115.989 58.0819 115.989 58.3985 115.794 58.5938L112.612 61.7758C112.416 61.971 112.1 61.971 111.905 61.7758C111.709 61.5805 111.709 61.2639 111.905 61.0687L114.733 58.2402L111.905 55.4118C111.709 55.2165 111.709 54.9 111.905 54.7047C112.1 54.5094 112.416 54.5094 112.612 54.7047L115.794 57.8867ZM108.16 57.7402L115.44 57.7402L115.44 58.7402L108.16 58.7402L108.16 57.7402Z" fill="black" />
            </svg>
          </div>
        </div>

        <div className='cursor-pointer' style={{
          textAlign: 'center', display: 'flex', position: 'fixed', top: 10, right: 10
          , backgroundColor: '#A4A4A4', borderRadius: '25%', flexDirection: 'row', alignItems: 'center',
        }} onClick={() => {
          useStore.setState({
            popupCart: 1,
            popupSub: 0,
            popupLogo: 0,
            popupModel: 0,
            popupVideo: 0,
            popupEdit: 0,
            popMyCart: 0,
            popup: 0,
            popupIndex: 0,
            popupModelIndex: 0,
            popMyCart3D: 0
          })
        }}>
          <Image className="m-3" src={'/assets/parcel.png'} width={30} height={30} alt={'logo'} />
          <span style={{
            marginRight: 10, backgroundColor: '#000', color: '#FFF', borderRadius: '50%', width: 20, height: 20,
            flexDirection: 'row', alignItems: 'center', display: 'flex', justifyContent: 'center'
          }}>{shooping.length}</span>
        </div>

        <div className='relative w-[150px] h-[150px] mr-12 cursor-move min-[564px]:hidden'>
          <ReactNipple
            options={{ mode: 'static', position: { top: '50%', left: '50%' } }}
            style={{
              // outline:'1px solid red',
              width: 150,
              height: 150
            }}
            onMove={(evt, data) => moveControl(data)}
            onEnd={() => endContol()}
          />
        </div>

        <div className='relative w-[150px] h-[150px] bottom-2 mr-12 cursor-move block max-sm:hidden'>
          <ReactNipple
            options={{ mode: 'static', position: { top: '50%', left: '50%' } }}
            style={{
              // outline:'1px solid red',
              width: 150,
              height: 150
            }}
            onMove={(evt, data) => moveControl(data)}
            onEnd={() => endContol()}
          />
        </div>
      </div>

      {/* over 564px */}
      <div className='absolute right-8 bottom-9 block min-[564px]:hidden' style={{ opacity: props.opacity }}>
        <div className='emoji-groups relative w-12'>

          {/* <EmojiItem url="assets/img/media/emoji_raising_hands.png" emojiIndex={1} />
          <EmojiItem url="assets/img/media/emoji_clap.png" emojiIndex={2} />
          <EmojiItem url="assets/img/media/emoji_smile.png" emojiIndex={3} />
          <EmojiItem url="assets/img/media/emoji_celebration.png" emojiIndex={4} />
          <EmojiItem url="assets/img/media/emoji_greet.png" emojiIndex={5} /> */}
          {/* <EmojiItem url="assets/img/media/emoji_fist_bump.png" emojiIndex={6} /> */}
        </div>
      </div>
      {/* below 564px */}
      <div className='absolute right-8 bottom-2 block max-sm:hidden' style={{ opacity: props.opacity }}>

        <div className='emoji-groups relative w-12'>

          <EmojiItem url="assets/img/media/emoji_raising_hands.png" emojiIndex={1} />
          <EmojiItem url="assets/img/media/emoji_clap.png" emojiIndex={2} />
          <EmojiItem url="assets/img/media/emoji_smile.png" emojiIndex={3} />
          <EmojiItem url="assets/img/media/emoji_celebration.png" emojiIndex={4} />
          <EmojiItem url="assets/img/media/emoji_greet.png" emojiIndex={5} />
          <EmojiItem url="assets/img/media/emoji_fist_bump.png" emojiIndex={6} />
        </div>
      </div>

      <div className='fixed bottom-[100px] left-2 py-4 m-6 border border-black rounded-xl bg-white bg-opacity-20 hidden md:block' style={{ opacity: props.opacity }}>
        <div className="flex flex-col">
          <div className="py-2 px-2" onClick={() => { useStore.setState({ startWorld: false, uiStep: 4 }); }}>
            <svg width="38" height="37" viewBox="0 0 38 37" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M25.6282 19.8182C24.8216 20.0565 23.8682 20.1665 22.7499 20.1665H17.2499C16.1316 20.1665 15.1782 20.0565 14.3716 19.8182C14.5732 17.4349 17.0207 15.5557 19.9999 15.5557C22.9791 15.5557 25.4266 17.4349 25.6282 19.8182Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M22.7502 1.8335H17.2502C12.6668 1.8335 10.8335 3.66683 10.8335 8.25016V13.7502C10.8335 17.2152 11.8785 19.1127 14.3718 19.8185C14.5735 17.4352 17.021 15.556 20.0002 15.556C22.9793 15.556 25.4268 17.4352 25.6285 19.8185C28.1218 19.1127 29.1668 17.2152 29.1668 13.7502V8.25016C29.1668 3.66683 27.3335 1.8335 22.7502 1.8335ZM20.0002 12.9893C18.1852 12.9893 16.7185 11.5135 16.7185 9.69851C16.7185 7.88351 18.1852 6.41683 20.0002 6.41683C21.8152 6.41683 23.2818 7.88351 23.2818 9.69851C23.2818 11.5135 21.8152 12.9893 20.0002 12.9893Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M23.2816 9.69819C23.2816 11.5132 21.8149 12.989 19.9999 12.989C18.1849 12.989 16.7183 11.5132 16.7183 9.69819C16.7183 7.88319 18.1849 6.4165 19.9999 6.4165C21.8149 6.4165 23.2816 7.88319 23.2816 9.69819Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M6.68102 28C7.24768 28 7.71435 28.1133 8.08102 28.34C8.44768 28.5667 8.71435 28.8567 8.88102 29.21C9.04768 29.5633 9.13102 29.94 9.13102 30.34C9.13102 30.7333 9.04768 31.1033 8.88102 31.45C8.71435 31.7967 8.44768 32.0833 8.08102 32.31C7.71435 32.53 7.24768 32.64 6.68102 32.64H5.24102V35H4.23102V28H6.68102ZM6.54102 31.76C6.98768 31.76 7.36435 31.6533 7.67102 31.44C7.97768 31.2267 8.13102 30.86 8.13102 30.34C8.13102 29.82 7.97768 29.4567 7.67102 29.25C7.36435 29.0367 6.98768 28.93 6.54102 28.93H5.24102V31.76H6.54102ZM10.1585 29.73H11.1885V30.57H11.2485C11.3352 30.3367 11.4885 30.14 11.7085 29.98C11.9352 29.8133 12.2252 29.73 12.5785 29.73C12.6718 29.73 12.7518 29.7333 12.8185 29.74C12.8852 29.7467 12.9518 29.7633 13.0185 29.79L12.9785 30.77C12.7985 30.7167 12.6118 30.69 12.4185 30.69C12.0252 30.69 11.7218 30.8033 11.5085 31.03C11.2952 31.25 11.1885 31.6167 11.1885 32.13V35H10.1585V29.73ZM16.0225 35.07C15.4825 35.07 15.0258 34.9433 14.6525 34.69C14.2792 34.4367 13.9992 34.1033 13.8125 33.69C13.6325 33.27 13.5425 32.82 13.5425 32.34C13.5425 31.8533 13.6325 31.4033 13.8125 30.99C13.9992 30.57 14.2792 30.2333 14.6525 29.98C15.0258 29.72 15.4825 29.59 16.0225 29.59C16.5625 29.59 17.0192 29.72 17.3925 29.98C17.7658 30.2333 18.0458 30.57 18.2325 30.99C18.4192 31.4033 18.5125 31.85 18.5125 32.33C18.5125 32.81 18.4192 33.26 18.2325 33.68C18.0458 34.0933 17.7658 34.43 17.3925 34.69C17.0192 34.9433 16.5625 35.07 16.0225 35.07ZM16.0225 34.21C16.4825 34.21 16.8392 34.03 17.0925 33.67C17.3525 33.31 17.4825 32.86 17.4825 32.32C17.4825 31.78 17.3525 31.3333 17.0925 30.98C16.8392 30.6267 16.4825 30.45 16.0225 30.45C15.5692 30.45 15.2125 30.63 14.9525 30.99C14.6925 31.3433 14.5625 31.7867 14.5625 32.32C14.5625 32.86 14.6892 33.31 14.9425 33.67C15.2025 34.03 15.5625 34.21 16.0225 34.21ZM24.1105 28.77C23.9305 28.77 23.7805 28.71 23.6605 28.59C23.5405 28.47 23.4805 28.32 23.4805 28.14C23.4805 27.96 23.5405 27.81 23.6605 27.69C23.7805 27.57 23.9305 27.51 24.1105 27.51C24.2905 27.51 24.4405 27.5733 24.5605 27.7C24.6805 27.82 24.7405 27.9667 24.7405 28.14C24.7405 28.3133 24.6805 28.4633 24.5605 28.59C24.4405 28.71 24.2905 28.77 24.1105 28.77ZM24.5905 35H23.5605V30.55H21.1605V35H20.1305L20.1205 30.55H19.4205V29.73H20.1205V29.01C20.1205 28.6567 20.2205 28.3367 20.4205 28.05C20.6271 27.7633 21.0271 27.62 21.6205 27.62C21.7671 27.62 21.9138 27.63 22.0605 27.65C22.2138 27.6633 22.3238 27.68 22.3905 27.7V28.41C22.2438 28.3767 22.0771 28.36 21.8905 28.36C21.6638 28.36 21.4971 28.4033 21.3905 28.49C21.2838 28.5767 21.2171 28.6833 21.1905 28.81C21.1705 28.93 21.1605 29.0867 21.1605 29.28V29.73H24.5905V35ZM27.566 35.04C27.1393 35.04 26.8227 34.9733 26.616 34.84C26.4093 34.7067 26.2793 34.5367 26.226 34.33C26.1727 34.1167 26.146 33.8433 26.146 33.51L26.156 27.5H27.186V33.33C27.186 33.5767 27.196 33.76 27.216 33.88C27.2427 34 27.3093 34.0967 27.416 34.17C27.5227 34.2433 27.6927 34.28 27.926 34.28C28.0527 34.28 28.166 34.27 28.266 34.25V34.99C27.986 35.0233 27.7527 35.04 27.566 35.04ZM31.6084 35.07C31.0618 35.07 30.6018 34.94 30.2284 34.68C29.8551 34.42 29.5784 34.0833 29.3984 33.67C29.2184 33.25 29.1284 32.8033 29.1284 32.33C29.1284 31.8567 29.2184 31.4133 29.3984 31C29.5784 30.58 29.8551 30.24 30.2284 29.98C30.6084 29.72 31.0718 29.59 31.6184 29.59C32.3384 29.59 32.9118 29.8267 33.3384 30.3C33.7651 30.7667 33.9784 31.4467 33.9784 32.34V32.63H30.1384V32.7C30.1384 32.9667 30.1984 33.2167 30.3184 33.45C30.4384 33.6833 30.6084 33.8733 30.8284 34.02C31.0484 34.16 31.3018 34.23 31.5884 34.23C31.9018 34.23 32.1718 34.1533 32.3984 34C32.6251 33.84 32.7884 33.6267 32.8884 33.36H33.9084C33.7751 33.8533 33.5118 34.2633 33.1184 34.59C32.7251 34.91 32.2218 35.07 31.6084 35.07ZM32.9684 31.92C32.9418 31.38 32.8051 30.99 32.5584 30.75C32.3184 30.5033 31.9984 30.38 31.5984 30.38C31.1718 30.38 30.8284 30.52 30.5684 30.8C30.3151 31.08 30.1818 31.4533 30.1684 31.92H32.9684Z" fill="black" />
            </svg>
          </div>
          <div className="py-2 px-2" onClick={() => { useStore.setState({ startWorld: false, uiStep: 4 }) }}>
            <svg width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M17.8541 2.24596C18.4958 1.70512 19.5316 1.70512 20.155 2.24596L21.6033 3.48346C21.8783 3.71262 22.4008 3.90512 22.7675 3.90512H24.3258C25.2975 3.90512 26.095 4.70262 26.095 5.67429V7.23262C26.095 7.59929 26.2875 8.11262 26.5166 8.38762L27.7541 9.83596C28.295 10.4776 28.295 11.5135 27.7541 12.1368L26.5166 13.5851C26.2875 13.8601 26.095 14.3735 26.095 14.7401V16.2985C26.095 17.2701 25.2975 18.0676 24.3258 18.0676H22.7675C22.4008 18.0676 21.8875 18.2601 21.6125 18.4893L20.1641 19.7268C19.5225 20.2676 18.4866 20.2676 17.8633 19.7268L16.415 18.4893C16.14 18.2601 15.6175 18.0676 15.26 18.0676H13.6558C12.6841 18.0676 11.8866 17.2701 11.8866 16.2985V14.731C11.8866 14.3735 11.7033 13.851 11.4741 13.5851L10.2366 12.1276C9.70497 11.4951 9.70497 10.4685 10.2366 9.83596L11.4741 8.37846C11.7033 8.10346 11.8866 7.59012 11.8866 7.23262V5.68346C11.8866 4.71179 12.6841 3.91429 13.6558 3.91429H15.2416C15.6083 3.91429 16.1216 3.72179 16.3966 3.49262L17.8541 2.24596Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M19 7.45264V11.8801" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M18.9951 14.6665H19.0041" stroke="black" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M14.0795 28V35H13.0395V31.9H9.70949V35H8.66949V28H9.70949V31.07H13.0395V28H14.0795ZM17.7266 35.07C17.1799 35.07 16.7199 34.94 16.3466 34.68C15.9733 34.42 15.6966 34.0833 15.5166 33.67C15.3366 33.25 15.2466 32.8033 15.2466 32.33C15.2466 31.8567 15.3366 31.4133 15.5166 31C15.6966 30.58 15.9733 30.24 16.3466 29.98C16.7266 29.72 17.1899 29.59 17.7366 29.59C18.4566 29.59 19.0299 29.8267 19.4566 30.3C19.8833 30.7667 20.0966 31.4467 20.0966 32.34V32.63H16.2566V32.7C16.2566 32.9667 16.3166 33.2167 16.4366 33.45C16.5566 33.6833 16.7266 33.8733 16.9466 34.02C17.1666 34.16 17.4199 34.23 17.7066 34.23C18.0199 34.23 18.2899 34.1533 18.5166 34C18.7433 33.84 18.9066 33.6267 19.0066 33.36H20.0266C19.8933 33.8533 19.6299 34.2633 19.2366 34.59C18.8433 34.91 18.3399 35.07 17.7266 35.07ZM19.0866 31.92C19.0599 31.38 18.9233 30.99 18.6766 30.75C18.4366 30.5033 18.1166 30.38 17.7166 30.38C17.2899 30.38 16.9466 30.52 16.6866 30.8C16.4333 31.08 16.2999 31.4533 16.2866 31.92H19.0866ZM22.7271 35.04C22.3005 35.04 21.9838 34.9733 21.7771 34.84C21.5705 34.7067 21.4405 34.5367 21.3871 34.33C21.3338 34.1167 21.3071 33.8433 21.3071 33.51L21.3171 27.5H22.3471V33.33C22.3471 33.5767 22.3571 33.76 22.3771 33.88C22.4038 34 22.4705 34.0967 22.5771 34.17C22.6838 34.2433 22.8538 34.28 23.0871 34.28C23.2138 34.28 23.3271 34.27 23.4271 34.25V34.99C23.1471 35.0233 22.9138 35.04 22.7271 35.04ZM27.3496 35.07C26.8962 35.07 26.5296 34.9633 26.2496 34.75C25.9696 34.53 25.7562 34.2733 25.6096 33.98H25.5396V37.05H24.4896V29.73H25.5396V30.65H25.6096C25.7496 30.37 25.9562 30.1233 26.2296 29.91C26.5029 29.6967 26.8696 29.59 27.3296 29.59C27.7896 29.59 28.1829 29.71 28.5096 29.95C28.8429 30.1833 29.0929 30.5067 29.2596 30.92C29.4329 31.3333 29.5196 31.8067 29.5196 32.34C29.5196 32.8667 29.4329 33.3367 29.2596 33.75C29.0929 34.1633 28.8462 34.4867 28.5196 34.72C28.1929 34.9533 27.8029 35.07 27.3496 35.07ZM27.0096 34.21C27.4896 34.21 27.8496 34.03 28.0896 33.67C28.3362 33.31 28.4596 32.8633 28.4596 32.33C28.4596 31.8033 28.3396 31.3633 28.0996 31.01C27.8596 30.65 27.4962 30.47 27.0096 30.47C26.5362 30.47 26.1729 30.65 25.9196 31.01C25.6729 31.37 25.5496 31.8133 25.5496 32.34C25.5496 32.8667 25.6729 33.31 25.9196 33.67C26.1729 34.03 26.5362 34.21 27.0096 34.21Z" fill="black" />
            </svg>
          </div>
        </div>
      </div>

      {
        show ?
          <div className='fixed bottom-[20px] left-2 py-4 m-6 border border-black rounded-xl bg-white bg-opacity-20 min-[563px]:hidden' style={{ opacity: props.opacity }}>
            <div className="flex flex-col">
              <div className="py-2 px-[15px]" onClick={() => closeUI(!show)}>
                <svg width="24" height="16" viewBox="0 0 24 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M19.9201 5.9668L13.4001 10.3135C12.6301 10.8268 11.3701 10.8268 10.6001 10.3135L4.08008 5.9668" stroke="black" strokeWidth="1.5" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
              </div>
              {/* <div className="py-2 px-2" onClick={() => { useStore.setState({ uiStep: 4 });}}>
                <svg width="38" height="37" viewBox="0 0 38 37" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M25.6282 19.8182C24.8216 20.0565 23.8682 20.1665 22.7499 20.1665H17.2499C16.1316 20.1665 15.1782 20.0565 14.3716 19.8182C14.5732 17.4349 17.0207 15.5557 19.9999 15.5557C22.9791 15.5557 25.4266 17.4349 25.6282 19.8182Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                  <path d="M22.7502 1.8335H17.2502C12.6668 1.8335 10.8335 3.66683 10.8335 8.25016V13.7502C10.8335 17.2152 11.8785 19.1127 14.3718 19.8185C14.5735 17.4352 17.021 15.556 20.0002 15.556C22.9793 15.556 25.4268 17.4352 25.6285 19.8185C28.1218 19.1127 29.1668 17.2152 29.1668 13.7502V8.25016C29.1668 3.66683 27.3335 1.8335 22.7502 1.8335ZM20.0002 12.9893C18.1852 12.9893 16.7185 11.5135 16.7185 9.69851C16.7185 7.88351 18.1852 6.41683 20.0002 6.41683C21.8152 6.41683 23.2818 7.88351 23.2818 9.69851C23.2818 11.5135 21.8152 12.9893 20.0002 12.9893Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                  <path d="M23.2816 9.69819C23.2816 11.5132 21.8149 12.989 19.9999 12.989C18.1849 12.989 16.7183 11.5132 16.7183 9.69819C16.7183 7.88319 18.1849 6.4165 19.9999 6.4165C21.8149 6.4165 23.2816 7.88319 23.2816 9.69819Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                  <path d="M6.68102 28C7.24768 28 7.71435 28.1133 8.08102 28.34C8.44768 28.5667 8.71435 28.8567 8.88102 29.21C9.04768 29.5633 9.13102 29.94 9.13102 30.34C9.13102 30.7333 9.04768 31.1033 8.88102 31.45C8.71435 31.7967 8.44768 32.0833 8.08102 32.31C7.71435 32.53 7.24768 32.64 6.68102 32.64H5.24102V35H4.23102V28H6.68102ZM6.54102 31.76C6.98768 31.76 7.36435 31.6533 7.67102 31.44C7.97768 31.2267 8.13102 30.86 8.13102 30.34C8.13102 29.82 7.97768 29.4567 7.67102 29.25C7.36435 29.0367 6.98768 28.93 6.54102 28.93H5.24102V31.76H6.54102ZM10.1585 29.73H11.1885V30.57H11.2485C11.3352 30.3367 11.4885 30.14 11.7085 29.98C11.9352 29.8133 12.2252 29.73 12.5785 29.73C12.6718 29.73 12.7518 29.7333 12.8185 29.74C12.8852 29.7467 12.9518 29.7633 13.0185 29.79L12.9785 30.77C12.7985 30.7167 12.6118 30.69 12.4185 30.69C12.0252 30.69 11.7218 30.8033 11.5085 31.03C11.2952 31.25 11.1885 31.6167 11.1885 32.13V35H10.1585V29.73ZM16.0225 35.07C15.4825 35.07 15.0258 34.9433 14.6525 34.69C14.2792 34.4367 13.9992 34.1033 13.8125 33.69C13.6325 33.27 13.5425 32.82 13.5425 32.34C13.5425 31.8533 13.6325 31.4033 13.8125 30.99C13.9992 30.57 14.2792 30.2333 14.6525 29.98C15.0258 29.72 15.4825 29.59 16.0225 29.59C16.5625 29.59 17.0192 29.72 17.3925 29.98C17.7658 30.2333 18.0458 30.57 18.2325 30.99C18.4192 31.4033 18.5125 31.85 18.5125 32.33C18.5125 32.81 18.4192 33.26 18.2325 33.68C18.0458 34.0933 17.7658 34.43 17.3925 34.69C17.0192 34.9433 16.5625 35.07 16.0225 35.07ZM16.0225 34.21C16.4825 34.21 16.8392 34.03 17.0925 33.67C17.3525 33.31 17.4825 32.86 17.4825 32.32C17.4825 31.78 17.3525 31.3333 17.0925 30.98C16.8392 30.6267 16.4825 30.45 16.0225 30.45C15.5692 30.45 15.2125 30.63 14.9525 30.99C14.6925 31.3433 14.5625 31.7867 14.5625 32.32C14.5625 32.86 14.6892 33.31 14.9425 33.67C15.2025 34.03 15.5625 34.21 16.0225 34.21ZM24.1105 28.77C23.9305 28.77 23.7805 28.71 23.6605 28.59C23.5405 28.47 23.4805 28.32 23.4805 28.14C23.4805 27.96 23.5405 27.81 23.6605 27.69C23.7805 27.57 23.9305 27.51 24.1105 27.51C24.2905 27.51 24.4405 27.5733 24.5605 27.7C24.6805 27.82 24.7405 27.9667 24.7405 28.14C24.7405 28.3133 24.6805 28.4633 24.5605 28.59C24.4405 28.71 24.2905 28.77 24.1105 28.77ZM24.5905 35H23.5605V30.55H21.1605V35H20.1305L20.1205 30.55H19.4205V29.73H20.1205V29.01C20.1205 28.6567 20.2205 28.3367 20.4205 28.05C20.6271 27.7633 21.0271 27.62 21.6205 27.62C21.7671 27.62 21.9138 27.63 22.0605 27.65C22.2138 27.6633 22.3238 27.68 22.3905 27.7V28.41C22.2438 28.3767 22.0771 28.36 21.8905 28.36C21.6638 28.36 21.4971 28.4033 21.3905 28.49C21.2838 28.5767 21.2171 28.6833 21.1905 28.81C21.1705 28.93 21.1605 29.0867 21.1605 29.28V29.73H24.5905V35ZM27.566 35.04C27.1393 35.04 26.8227 34.9733 26.616 34.84C26.4093 34.7067 26.2793 34.5367 26.226 34.33C26.1727 34.1167 26.146 33.8433 26.146 33.51L26.156 27.5H27.186V33.33C27.186 33.5767 27.196 33.76 27.216 33.88C27.2427 34 27.3093 34.0967 27.416 34.17C27.5227 34.2433 27.6927 34.28 27.926 34.28C28.0527 34.28 28.166 34.27 28.266 34.25V34.99C27.986 35.0233 27.7527 35.04 27.566 35.04ZM31.6084 35.07C31.0618 35.07 30.6018 34.94 30.2284 34.68C29.8551 34.42 29.5784 34.0833 29.3984 33.67C29.2184 33.25 29.1284 32.8033 29.1284 32.33C29.1284 31.8567 29.2184 31.4133 29.3984 31C29.5784 30.58 29.8551 30.24 30.2284 29.98C30.6084 29.72 31.0718 29.59 31.6184 29.59C32.3384 29.59 32.9118 29.8267 33.3384 30.3C33.7651 30.7667 33.9784 31.4467 33.9784 32.34V32.63H30.1384V32.7C30.1384 32.9667 30.1984 33.2167 30.3184 33.45C30.4384 33.6833 30.6084 33.8733 30.8284 34.02C31.0484 34.16 31.3018 34.23 31.5884 34.23C31.9018 34.23 32.1718 34.1533 32.3984 34C32.6251 33.84 32.7884 33.6267 32.8884 33.36H33.9084C33.7751 33.8533 33.5118 34.2633 33.1184 34.59C32.7251 34.91 32.2218 35.07 31.6084 35.07ZM32.9684 31.92C32.9418 31.38 32.8051 30.99 32.5584 30.75C32.3184 30.5033 31.9984 30.38 31.5984 30.38C31.1718 30.38 30.8284 30.52 30.5684 30.8C30.3151 31.08 30.1818 31.4533 30.1684 31.92H32.9684Z" fill="black"/>
                </svg>
              </div> */}
              {/* <div className="py-2 px-2" onClick={() => { useStore.setState({ uiStep: 4 })}}>
                <svg width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M17.8541 2.24596C18.4958 1.70512 19.5316 1.70512 20.155 2.24596L21.6033 3.48346C21.8783 3.71262 22.4008 3.90512 22.7675 3.90512H24.3258C25.2975 3.90512 26.095 4.70262 26.095 5.67429V7.23262C26.095 7.59929 26.2875 8.11262 26.5166 8.38762L27.7541 9.83596C28.295 10.4776 28.295 11.5135 27.7541 12.1368L26.5166 13.5851C26.2875 13.8601 26.095 14.3735 26.095 14.7401V16.2985C26.095 17.2701 25.2975 18.0676 24.3258 18.0676H22.7675C22.4008 18.0676 21.8875 18.2601 21.6125 18.4893L20.1641 19.7268C19.5225 20.2676 18.4866 20.2676 17.8633 19.7268L16.415 18.4893C16.14 18.2601 15.6175 18.0676 15.26 18.0676H13.6558C12.6841 18.0676 11.8866 17.2701 11.8866 16.2985V14.731C11.8866 14.3735 11.7033 13.851 11.4741 13.5851L10.2366 12.1276C9.70497 11.4951 9.70497 10.4685 10.2366 9.83596L11.4741 8.37846C11.7033 8.10346 11.8866 7.59012 11.8866 7.23262V5.68346C11.8866 4.71179 12.6841 3.91429 13.6558 3.91429H15.2416C15.6083 3.91429 16.1216 3.72179 16.3966 3.49262L17.8541 2.24596Z" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                  <path d="M19 7.45264V11.8801" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                  <path d="M18.9951 14.6665H19.0041" stroke="black" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                  <path d="M14.0795 28V35H13.0395V31.9H9.70949V35H8.66949V28H9.70949V31.07H13.0395V28H14.0795ZM17.7266 35.07C17.1799 35.07 16.7199 34.94 16.3466 34.68C15.9733 34.42 15.6966 34.0833 15.5166 33.67C15.3366 33.25 15.2466 32.8033 15.2466 32.33C15.2466 31.8567 15.3366 31.4133 15.5166 31C15.6966 30.58 15.9733 30.24 16.3466 29.98C16.7266 29.72 17.1899 29.59 17.7366 29.59C18.4566 29.59 19.0299 29.8267 19.4566 30.3C19.8833 30.7667 20.0966 31.4467 20.0966 32.34V32.63H16.2566V32.7C16.2566 32.9667 16.3166 33.2167 16.4366 33.45C16.5566 33.6833 16.7266 33.8733 16.9466 34.02C17.1666 34.16 17.4199 34.23 17.7066 34.23C18.0199 34.23 18.2899 34.1533 18.5166 34C18.7433 33.84 18.9066 33.6267 19.0066 33.36H20.0266C19.8933 33.8533 19.6299 34.2633 19.2366 34.59C18.8433 34.91 18.3399 35.07 17.7266 35.07ZM19.0866 31.92C19.0599 31.38 18.9233 30.99 18.6766 30.75C18.4366 30.5033 18.1166 30.38 17.7166 30.38C17.2899 30.38 16.9466 30.52 16.6866 30.8C16.4333 31.08 16.2999 31.4533 16.2866 31.92H19.0866ZM22.7271 35.04C22.3005 35.04 21.9838 34.9733 21.7771 34.84C21.5705 34.7067 21.4405 34.5367 21.3871 34.33C21.3338 34.1167 21.3071 33.8433 21.3071 33.51L21.3171 27.5H22.3471V33.33C22.3471 33.5767 22.3571 33.76 22.3771 33.88C22.4038 34 22.4705 34.0967 22.5771 34.17C22.6838 34.2433 22.8538 34.28 23.0871 34.28C23.2138 34.28 23.3271 34.27 23.4271 34.25V34.99C23.1471 35.0233 22.9138 35.04 22.7271 35.04ZM27.3496 35.07C26.8962 35.07 26.5296 34.9633 26.2496 34.75C25.9696 34.53 25.7562 34.2733 25.6096 33.98H25.5396V37.05H24.4896V29.73H25.5396V30.65H25.6096C25.7496 30.37 25.9562 30.1233 26.2296 29.91C26.5029 29.6967 26.8696 29.59 27.3296 29.59C27.7896 29.59 28.1829 29.71 28.5096 29.95C28.8429 30.1833 29.0929 30.5067 29.2596 30.92C29.4329 31.3333 29.5196 31.8067 29.5196 32.34C29.5196 32.8667 29.4329 33.3367 29.2596 33.75C29.0929 34.1633 28.8462 34.4867 28.5196 34.72C28.1929 34.9533 27.8029 35.07 27.3496 35.07ZM27.0096 34.21C27.4896 34.21 27.8496 34.03 28.0896 33.67C28.3362 33.31 28.4596 32.8633 28.4596 32.33C28.4596 31.8033 28.3396 31.3633 28.0996 31.01C27.8596 30.65 27.4962 30.47 27.0096 30.47C26.5362 30.47 26.1729 30.65 25.9196 31.01C25.6729 31.37 25.5496 31.8133 25.5496 32.34C25.5496 32.8667 25.6729 33.31 25.9196 33.67C26.1729 34.03 26.5362 34.21 27.0096 34.21Z" fill="black"/>
                </svg>
              </div> */}
            </div>
          </div>
          :
          <div
            className='fixed bottom-[20px] left-2 py-[12px] m-6 border border-black rounded-xl bg-white bg-opacity-20 min-[563px]:hidden'
            style={{ opacity: props.opacity }}
            onClick={() => closeUI(!show)}
          >
            <div className="px-[8px]">
              <svg width="38" height="32" viewBox="0 0 38 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M6.61383 23H8.14383L10.0538 28.01H10.0838L11.9838 23H13.5138V30H12.4938V24.55H12.4538L10.4238 30H9.70383L7.67383 24.55H7.63383V30H6.61383V23ZM17.1651 30.07C16.6184 30.07 16.1584 29.94 15.7851 29.68C15.4117 29.42 15.1351 29.0833 14.9551 28.67C14.7751 28.25 14.6851 27.8033 14.6851 27.33C14.6851 26.8567 14.7751 26.4133 14.9551 26C15.1351 25.58 15.4117 25.24 15.7851 24.98C16.1651 24.72 16.6284 24.59 17.1751 24.59C17.8951 24.59 18.4684 24.8267 18.8951 25.3C19.3217 25.7667 19.5351 26.4467 19.5351 27.34V27.63H15.6951V27.7C15.6951 27.9667 15.7551 28.2167 15.8751 28.45C15.9951 28.6833 16.1651 28.8733 16.3851 29.02C16.6051 29.16 16.8584 29.23 17.1451 29.23C17.4584 29.23 17.7284 29.1533 17.9551 29C18.1817 28.84 18.3451 28.6267 18.4451 28.36H19.4651C19.3317 28.8533 19.0684 29.2633 18.6751 29.59C18.2817 29.91 17.7784 30.07 17.1651 30.07ZM18.5251 26.92C18.4984 26.38 18.3617 25.99 18.1151 25.75C17.8751 25.5033 17.5551 25.38 17.1551 25.38C16.7284 25.38 16.3851 25.52 16.1251 25.8C15.8717 26.08 15.7384 26.4533 15.7251 26.92H18.5251ZM20.7056 24.73H21.7456V25.63H21.8256C21.9523 25.3367 22.159 25.09 22.4456 24.89C22.7323 24.69 23.0856 24.59 23.5056 24.59C23.959 24.59 24.3323 24.7 24.6256 24.92C24.919 25.1333 25.1323 25.41 25.2656 25.75C25.399 26.0833 25.4656 26.44 25.4656 26.82V30H24.4356V26.97C24.4356 26.49 24.3123 26.1233 24.0656 25.87C23.8256 25.6167 23.5056 25.49 23.1056 25.49C22.6856 25.49 22.3523 25.6267 22.1056 25.9C21.8656 26.1733 21.7456 26.53 21.7456 26.97V30H20.7056V24.73ZM31.4496 30H30.4096V29.05H30.3396C30.2063 29.3433 29.9996 29.59 29.7196 29.79C29.4396 29.99 29.0996 30.09 28.6996 30.09C28.2463 30.09 27.8763 29.9833 27.5896 29.77C27.3096 29.55 27.1063 29.2733 26.9796 28.94C26.8529 28.6 26.7896 28.2433 26.7896 27.87V24.73H27.8196V27.72C27.8196 28.1867 27.9363 28.55 28.1696 28.81C28.4029 29.07 28.7129 29.2 29.0996 29.2C29.5063 29.2 29.8263 29.0633 30.0596 28.79C30.2929 28.51 30.4096 28.1533 30.4096 27.72V24.73H31.4496V30Z" fill="black" />
                <path d="M11.0799 10.0332L17.5999 5.68654C18.3699 5.1732 19.6299 5.1732 20.3999 5.68654L26.9199 10.0332" stroke="black" strokeWidth="1.5" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
              </svg>
            </div>
          </div>
      }
    </>
  )
}

export default VirtualWorldUI
